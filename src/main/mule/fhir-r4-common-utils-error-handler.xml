<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<error-handler name="globalErrorHandler" doc:id="20e18d88-5077-4e39-8a4a-a4a50cca94af" >
            <on-error-continue enableNotifications="true" logException="true" type="ANY" doc:name="OnErrorContinueHTTP+APIKIT+ANY">
                <set-variable value='#[import setStatusCode from modules::errorStatus&#10;---&#10;setStatusCode(error.errorType.identifier) default 500]' doc:name="setHttpStatus" doc:id="0a5ccddf-7de8-41a5-8577-811429b06603" variableName="httpStatus"/>
                <flow-ref doc:name="setErrorResponse" doc:id="8300761d-79c4-4020-8076-f06acceebea9" name="fhirR4CommonUtilsErrorHandlerSubFlow"/>
            </on-error-continue>
	</error-handler>

	<sub-flow name="fhirR4CommonUtilsErrorHandlerSubFlow" doc:id="0fd7cb91-8174-4bf6-a8e6-d3d7d8981e61" >
		<ee:transform doc:name="setErrorResponse" doc:id="68f59f50-e8f7-4b08-8c6d-7b8576382871" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import decodeStatus from modules::errorStatus
import substringBefore from dw::core::Strings
var errorDescription = 
	if ((write(error.errorMessage.payload, "application/json") as String) != "null")
		write(error.errorMessage.payload, "application/json") as String
	else
		(((vars.customErrorDescription) default error.detailedDescription as String) default error.description as String) default error.errorType.identifier as String
output application/json
---
{ 
	name: [app.name as String, (substringBefore(error.failingComponent, "/") as String) default vars.flowName as String] joinBy ', ',
	code: vars.httpStatus,
	title: decodeStatus(vars.httpStatus default attributes.statusCode),
	transactionID: correlationId,
	description: errorDescription,
	timestamp: (now() >> "CET") as String {format: "yyyy-MM-dd'T'HH:mm:ss"},
	invocationTimestamp: vars.invocationsTimestamp
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="logErrorSubFlow" doc:id="714f8900-0457-46df-9ac4-4c5d320a2725" name="logErrorSubFlow"/>
	
</sub-flow>
	<sub-flow name="notImlementedSubFlow" doc:id="6211c767-b402-4dfa-b179-4c97890e47c9" >
		<set-variable value="#[501 as Number]" doc:name="set501HttpStatus" doc:id="7cf21416-29cd-498d-b1a1-ca3b24bb5e61" variableName="httpStatus"/>
		<ee:transform doc:name="set501ErrorResponce" doc:id="e90d003a-2b2f-4ff9-ac16-977dfd45af7b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  name: [app.name as String, vars.flowName as String] joinBy ", ",
  code: "501",
  title: "NOT_IMPLEMENTED",
  transactionID: correlationId,
  description: "The operation is not implemented.",
  invocationTimestamp: vars.invocationsTimestamp
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>	


</mule>